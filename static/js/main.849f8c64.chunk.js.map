{"version":3,"sources":["App.tsx","components/Authorization/Authorization.tsx","components/Header/Header.tsx","components/EditPassword/EditPassword.tsx","components/NewPassword/NewPassword.tsx","components/PasswordManager/PasswordManager.tsx","components/Registration/Registration.tsx","index.tsx"],"names":["App","className","to","type","Authorization","useState","userLogin","setUserLogin","userPassword","setUserPassword","wrongData","setWrongData","validAuth","setValidAuth","onSubmit","event","preventDefault","userData","localStorage","getItem","JSON","parse","htmlFor","id","name","value","onChange","target","replace","Header","EditPassword","editPassword","password","nameOfApp","setNameOfApp","data","Date","now","NewPassword","addNewPassword","PasswordManager","user","setUserData","selectedPassword","setSelectedPassword","revealedPassword","setRevealedPassword","loadData","useEffect","passwordId","updatedPassword","updatedData","savedPasswords","map","setItem","stringify","console","log","Fragment","onClick","filter","deletePassword","Registration","registered","setRegistered","ReactDOM","render","StrictMode","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.849f8c64.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './App.scss';\n\nexport const App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <div className=\"App__buttons\">\n        <Link to=\"/authorization\">\n          <button className=\"button\" type=\"button\">Log in</button>\n        </Link>\n        <Link to=\"/registration\">\n          <button className=\"button\" type=\"button\">Create new account</button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport './Authorization.scss';\n\nexport const Authorization: React.FC = () => {\n  const [userLogin, setUserLogin] = useState('');\n  const [userPassword, setUserPassword] = useState('');\n  const [wrongData, setWrongData] = useState(false);\n  const [validAuth, setValidAuth] = useState(false);\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const userData = localStorage.getItem(userLogin);\n\n    if (userData === null) {\n      setWrongData(true);\n\n      return;\n    }\n\n    const objectData = JSON.parse(userData);\n\n    if (objectData.userPassword !== userPassword) {\n      setWrongData(true);\n\n      return;\n    }\n\n    setValidAuth(true);\n    setWrongData(false);\n  };\n\n  return (\n    <div className=\"auth\">\n      <h2 className=\"auth__title\">Authorization</h2>\n\n      <form className=\"form auth__form\" onSubmit={handleSubmit}>\n        <label className=\"form__label\" htmlFor=\"login\">\n          Login\n          <input\n            className=\"form__input\"\n            id=\"login\"\n            type=\"text\"\n            name=\"login\"\n            value={userLogin}\n            onChange={(event) => {\n              setUserLogin(event.target.value);\n            }}\n          />\n        </label>\n\n        <label className=\"form__label\" htmlFor=\"login\">\n          Password\n          <input\n            className=\"form__input\"\n            id=\"password\"\n            type=\"password\"\n            name=\"password\"\n            value={userPassword}\n            onChange={(event) => {\n              setUserPassword(event.target.value);\n            }}\n          />\n        </label>\n\n        <button className=\"button\" type=\"submit\">\n          Submit\n        </button>\n      </form>\n      {wrongData && 'Something was wrong'}\n      {validAuth && (\n        <Navigate to=\"/passwordManager\" replace />\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport './Header.scss';\n\nexport const Header: React.FC = () => {\n  return (\n    <>\n      <h1 className=\"title\">Password manager</h1>\n    </>\n  );\n};\n","import React, { useState } from 'react';\n\ntype Props = {\n  editPassword: (passwordId: number, updatedPassword: Password) => void\n  password: Password,\n};\n\nexport const EditPassword: React.FC<Props> = ({ editPassword, password }) => {\n  const [nameOfApp, setNameOfApp] = useState(password.nameOfApp);\n  const [userLogin, setUserLogin] = useState(password.userLogin);\n  const [userPassword, setUserPassword] = useState(password.userPassword);\n\n  return (\n    <div className=\"editor\">\n      <form\n        className=\"form form--editor\"\n        onSubmit={(event) => {\n          event.preventDefault();\n\n          const data = {\n            id: Date.now(),\n            nameOfApp,\n            userLogin,\n            userPassword,\n          };\n\n          editPassword(password.id, data);\n        }}\n      >\n        <label className=\"add-form__label\" htmlFor=\"nameOfApp\">\n          <input\n            className=\"form__input\"\n            type=\"text\"\n            name=\"nameOfApp\"\n            value={nameOfApp}\n            onChange={(event) => {\n              setNameOfApp(event.target.value);\n            }}\n          />\n        </label>\n\n        <label className=\"add-form__label\" htmlFor=\"login\">\n          <input\n            className=\"form__input\"\n            type=\"text\"\n            name=\"login\"\n            value={userLogin}\n            onChange={(event) => {\n              setUserLogin(event.target.value);\n            }}\n          />\n        </label>\n\n        <label className=\"add-form__label\" htmlFor=\"login\">\n          <input\n            className=\"form__input\"\n            type=\"password\"\n            name=\"password\"\n            value={userPassword}\n            onChange={(event) => {\n              setUserPassword(event.target.value);\n            }}\n          />\n        </label>\n\n        <button className=\"button\" type=\"submit\">\n          Edit\n        </button>\n      </form>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './NewPassword.scss';\n\ntype Props = {\n  addNewPassword: (data: Password) => void,\n};\n\nexport const NewPassword: React.FC<Props> = ({ addNewPassword }) => {\n  const [nameOfApp, setNameOfApp] = useState('');\n  const [userLogin, setUserLogin] = useState('');\n  const [userPassword, setUserPassword] = useState('');\n\n  return (\n    <div className=\"newPassword\">\n      <form\n        className=\"form newPassword__form\"\n        onSubmit={(event) => {\n          event.preventDefault();\n\n          const data = {\n            id: Date.now(),\n            nameOfApp,\n            userLogin,\n            userPassword,\n          };\n\n          addNewPassword(data);\n\n          setNameOfApp('');\n          setUserLogin('');\n          setUserPassword('');\n        }}\n      >\n        <label className=\"form__label\" htmlFor=\"nameOfApp\">\n          App name\n          <input\n            className=\"form__input\"\n            id=\"nameOfApp\"\n            type=\"text\"\n            name=\"nameOfApp\"\n            value={nameOfApp}\n            onChange={(event) => {\n              setNameOfApp(event.target.value);\n            }}\n          />\n        </label>\n\n        <label className=\"form__label\" htmlFor=\"login\">\n          Login\n          <input\n            className=\"form__input\"\n            type=\"text\"\n            id=\"login\"\n            name=\"login\"\n            value={userLogin}\n            onChange={(event) => {\n              setUserLogin(event.target.value);\n            }}\n          />\n        </label>\n\n        <label className=\"form__label\" htmlFor=\"password\">\n          Password\n          <input\n            className=\"form__input\"\n            id=\"password\"\n            type=\"password\"\n            name=\"password\"\n            value={userPassword}\n            onChange={(event) => {\n              setUserPassword(event.target.value);\n            }}\n          />\n        </label>\n\n        <button className=\"button\" type=\"submit\">\n          Add\n        </button>\n      </form>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { EditPassword } from '../EditPassword/EditPassword';\nimport { NewPassword } from '../NewPassword/NewPassword';\nimport './PasswordManager.scss';\n\ntype Props = {\n  userLogin: string,\n};\n\nexport const PasswordManager: React.FC<Props> = ({ userLogin }) => {\n  const [user] = useState('vlad');\n  const [userData, setUserData] = useState<User | null>(null);\n\n  const [selectedPassword, setSelectedPassword] = useState(0);\n  const [revealedPassword, setRevealedPassword] = useState(0);\n\n  const loadData = () => {\n    const data = JSON.parse(localStorage.getItem(user) || '');\n\n    setUserData(data);\n  };\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const addNewPassword = (data: Password) => {\n    if (userData !== null) {\n      const updatedData = {\n        ...userData,\n        savedPasswords: [...userData.savedPasswords, data],\n      };\n\n      localStorage.setItem(user, JSON.stringify(updatedData));\n      loadData();\n    }\n  };\n\n  const deletePassword = (passwordId: number) => {\n    if (userData !== null) {\n      const updatedData = {\n        ...userData,\n        savedPasswords: [...userData.savedPasswords].filter(password => passwordId !== password.id),\n      };\n\n      localStorage.setItem(user, JSON.stringify(updatedData));\n      loadData();\n    }\n  };\n\n  const editPassword = (passwordId: number, updatedPassword: Password) => {\n    if (userData !== null) {\n      const updatedData = {\n        ...userData,\n        savedPasswords: [...userData.savedPasswords].map(password => {\n          if (passwordId === password.id) {\n            return updatedPassword;\n          }\n\n          return password;\n        }),\n      };\n\n      localStorage.setItem(user, JSON.stringify(updatedData));\n      loadData();\n    }\n  };\n\n  // eslint-disable-next-line no-console\n  console.log(userLogin);\n\n  return (\n    <div className=\"manager\">\n      <Link to=\"/\">\n        <button className=\"button manager__quite\" type=\"button\">\n          Quit\n        </button>\n      </Link>\n      <NewPassword addNewPassword={addNewPassword} />\n      <div className=\"manager__passwords\">\n        Passwords\n        <ol className=\"manager__list\">\n          {userData?.savedPasswords.map((password: Password) => (\n            <React.Fragment key={password.id}>\n              <li className=\"manager__list-item\">\n                <p>{`App name: ${password.nameOfApp}`}</p>\n                <p>{`Login: ${password.userLogin}`}</p>\n                <p>\n                  {revealedPassword === password.id\n                    ? (`Password: ${password.userPassword}`)\n                    : 'Password: ******'}\n                </p>\n                {password.id === selectedPassword && (\n                  <div className=\"manager__editor\">\n                    <EditPassword\n                      editPassword={editPassword}\n                      password={password}\n                    />\n                  </div>\n                )}\n              </li>\n\n              <button\n                className=\"button manager__button\"\n                type=\"button\"\n                onClick={() => {\n                  if (selectedPassword !== password.id) {\n                    setSelectedPassword(password.id);\n                  } else {\n                    setSelectedPassword(0);\n                  }\n                }}\n              >\n                Edit\n              </button>\n\n              <button\n                className=\"button manager__button\"\n                type=\"button\"\n                onClick={() => {\n                  setRevealedPassword(password.id);\n                }}\n              >\n                Show password\n              </button>\n\n              <button\n                className=\"button manager__button\"\n                type=\"button\"\n                onClick={() => {\n                  deletePassword(password.id);\n                }}\n              >\n                Delete password\n              </button>\n            </React.Fragment>\n          ))}\n        </ol>\n\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport './Registration.scss';\n\nexport const Registration: React.FC = () => {\n  const [userLogin, setUserLogin] = useState('');\n  const [userPassword, setUserPassword] = useState('');\n  const [registered, setRegistered] = useState(false);\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const userData = {\n      userLogin,\n      userPassword,\n      savedPasswords: [],\n    };\n\n    localStorage.setItem(userData.userLogin, JSON.stringify(userData));\n    setRegistered(true);\n  };\n\n  return (\n    <div className=\"reg\">\n      <h2 className=\"reg__title\">Registration</h2>\n\n      <form className=\"form reg__form\" onSubmit={handleSubmit}>\n        <label className=\"form__label\" htmlFor=\"login\">\n          Login\n          <input\n            className=\"form__input\"\n            id=\"login\"\n            type=\"text\"\n            name=\"login\"\n            value={userLogin}\n            onChange={(event) => {\n              setUserLogin(event.target.value);\n            }}\n          />\n        </label>\n\n        <label className=\"form__label\" htmlFor=\"login\">\n          Password\n          <input\n            className=\"form__input\"\n            type=\"password\"\n            name=\"password\"\n            value={userPassword}\n            onChange={(event) => {\n              setUserPassword(event.target.value);\n            }}\n          />\n        </label>\n\n        <button className=\"button\" type=\"submit\">\n          Submit\n        </button>\n\n      </form>\n      {registered && (\n        <Navigate to=\"/passwordManager\" replace />\n      )}\n\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { HashRouter, Route, Routes } from 'react-router-dom';\nimport { App } from './App';\nimport { Authorization } from './components/Authorization/Authorization';\nimport { Header } from './components/Header/Header';\nimport { PasswordManager } from './components/PasswordManager/PasswordManager';\nimport { Registration } from './components/Registration/Registration';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Header />\n      <Routes>\n        <Route path=\"/\" element={<App />} />\n        <Route path=\"/authorization\" element={<Authorization />} />\n        <Route path=\"/registration\" element={<Registration />} />\n        <Route path=\"/passwordManager\" element={<PasswordManager userLogin=\"\" />} />\n      </Routes>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}