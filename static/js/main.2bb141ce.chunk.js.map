{"version":3,"sources":["App.tsx","components/Authorization/Authorization.tsx","components/Header/Header.tsx","components/EditPassword/EditPassword.tsx","components/NewPassword/NewPassword.tsx","components/PasswordManager/PasswordManager.tsx","components/Registration/Registration.tsx","index.tsx"],"names":["App","className","to","type","Authorization","navigate","useNavigate","useState","userLogin","setUserLogin","userPassword","setUserPassword","wrongData","setWrongData","validAuth","setValidAuth","onSubmit","event","preventDefault","userData","localStorage","getItem","JSON","parse","htmlFor","id","name","value","onChange","target","replace","state","nameFromLocation","Header","EditPassword","editPassword","password","nameOfApp","setNameOfApp","data","Date","now","NewPassword","addNewPassword","PasswordManager","useLocation","user","setUserData","selectedPassword","setSelectedPassword","revealedPassword","setRevealedPassword","loadData","useEffect","passwordId","updatedPassword","updatedData","savedPasswords","map","setItem","stringify","Fragment","onClick","filter","deletePassword","Registration","registered","setRegistered","ReactDOM","render","StrictMode","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.2bb141ce.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './App.scss';\n\nexport const App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <div className=\"App__buttons\">\n        <Link to=\"/authorization\">\n          <button className=\"button\" type=\"button\">Log in</button>\n        </Link>\n        <Link to=\"/registration\">\n          <button className=\"button\" type=\"button\">Create new account</button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Authorization.scss';\n\nexport const Authorization: React.FC = () => {\n  const navigate = useNavigate();\n\n  const [userLogin, setUserLogin] = useState('');\n  const [userPassword, setUserPassword] = useState('');\n  const [wrongData, setWrongData] = useState(false);\n  const [validAuth, setValidAuth] = useState(false);\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const userData = localStorage.getItem(userLogin);\n\n    if (userData === null) {\n      setWrongData(true);\n\n      return;\n    }\n\n    const objectData = JSON.parse(userData);\n\n    if (objectData.userPassword !== userPassword) {\n      setWrongData(true);\n\n      return;\n    }\n\n    setValidAuth(true);\n    setWrongData(false);\n  };\n\n  return (\n    <div className=\"auth\">\n      <h2 className=\"auth__title\">Authorization</h2>\n\n      <form className=\"form auth__form\" onSubmit={handleSubmit}>\n        <label className=\"form__label\" htmlFor=\"login\">\n          Login\n          <input\n            className=\"form__input\"\n            id=\"login\"\n            type=\"text\"\n            name=\"login\"\n            value={userLogin}\n            onChange={(event) => {\n              setUserLogin(event.target.value);\n            }}\n          />\n        </label>\n\n        <label className=\"form__label\" htmlFor=\"login\">\n          Password\n          <input\n            className=\"form__input\"\n            id=\"password\"\n            type=\"password\"\n            name=\"password\"\n            value={userPassword}\n            onChange={(event) => {\n              setUserPassword(event.target.value);\n            }}\n          />\n        </label>\n\n        <button className=\"button\" type=\"submit\">\n          Submit\n        </button>\n      </form>\n\n      {wrongData && 'Something was wrong'}\n\n      {validAuth && (\n        navigate('/passwordManager', { replace: true, state: { nameFromLocation: userLogin } })\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport './Header.scss';\n\nexport const Header: React.FC = () => {\n  return (\n    <>\n      <h1 className=\"title\">Password manager</h1>\n    </>\n  );\n};\n","import React, { useState } from 'react';\n\ntype Props = {\n  editPassword: (passwordId: number, updatedPassword: Password) => void\n  password: Password,\n};\n\nexport const EditPassword: React.FC<Props> = ({ editPassword, password }) => {\n  const [nameOfApp, setNameOfApp] = useState(password.nameOfApp);\n  const [userLogin, setUserLogin] = useState(password.userLogin);\n  const [userPassword, setUserPassword] = useState(password.userPassword);\n\n  return (\n    <div className=\"editor\">\n      <form\n        className=\"form form--editor\"\n        onSubmit={(event) => {\n          event.preventDefault();\n\n          const data = {\n            id: Date.now(),\n            nameOfApp,\n            userLogin,\n            userPassword,\n          };\n\n          editPassword(password.id, data);\n        }}\n      >\n        <label className=\"add-form__label\" htmlFor=\"nameOfApp\">\n          <input\n            className=\"form__input\"\n            type=\"text\"\n            name=\"nameOfApp\"\n            value={nameOfApp}\n            onChange={(event) => {\n              setNameOfApp(event.target.value);\n            }}\n          />\n        </label>\n\n        <label className=\"add-form__label\" htmlFor=\"login\">\n          <input\n            className=\"form__input\"\n            type=\"text\"\n            name=\"login\"\n            value={userLogin}\n            onChange={(event) => {\n              setUserLogin(event.target.value);\n            }}\n          />\n        </label>\n\n        <label className=\"add-form__label\" htmlFor=\"login\">\n          <input\n            className=\"form__input\"\n            type=\"password\"\n            name=\"password\"\n            value={userPassword}\n            onChange={(event) => {\n              setUserPassword(event.target.value);\n            }}\n          />\n        </label>\n\n        <button className=\"button\" type=\"submit\">\n          Save\n        </button>\n      </form>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './NewPassword.scss';\n\ntype Props = {\n  addNewPassword: (data: Password) => void,\n};\n\nexport const NewPassword: React.FC<Props> = ({ addNewPassword }) => {\n  const [nameOfApp, setNameOfApp] = useState('');\n  const [userLogin, setUserLogin] = useState('');\n  const [userPassword, setUserPassword] = useState('');\n\n  return (\n    <div className=\"newPassword\">\n      <form\n        className=\"form newPassword__form\"\n        onSubmit={(event) => {\n          event.preventDefault();\n\n          const data = {\n            id: Date.now(),\n            nameOfApp,\n            userLogin,\n            userPassword,\n          };\n\n          addNewPassword(data);\n\n          setNameOfApp('');\n          setUserLogin('');\n          setUserPassword('');\n        }}\n      >\n        <label className=\"form__label\" htmlFor=\"nameOfApp\">\n          Website\n          <input\n            className=\"form__input\"\n            id=\"nameOfApp\"\n            type=\"text\"\n            name=\"nameOfApp\"\n            value={nameOfApp}\n            onChange={(event) => {\n              setNameOfApp(event.target.value);\n            }}\n          />\n        </label>\n\n        <label className=\"form__label\" htmlFor=\"login\">\n          Login\n          <input\n            className=\"form__input\"\n            type=\"text\"\n            id=\"login\"\n            name=\"login\"\n            value={userLogin}\n            onChange={(event) => {\n              setUserLogin(event.target.value);\n            }}\n          />\n        </label>\n\n        <label className=\"form__label\" htmlFor=\"password\">\n          Password\n          <input\n            className=\"form__input\"\n            id=\"password\"\n            type=\"password\"\n            name=\"password\"\n            value={userPassword}\n            onChange={(event) => {\n              setUserPassword(event.target.value);\n            }}\n          />\n        </label>\n\n        <button className=\"button\" type=\"submit\">\n          Add new password\n        </button>\n      </form>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { EditPassword } from '../EditPassword/EditPassword';\nimport { NewPassword } from '../NewPassword/NewPassword';\nimport './PasswordManager.scss';\n\ninterface LocationState {\n  nameFromLocation: string,\n}\n\nexport const PasswordManager: React.FC = () => {\n  const location = useLocation();\n  const { nameFromLocation } = location.state as LocationState;\n\n  const [user] = useState(nameFromLocation);\n  const [userData, setUserData] = useState<User | null>(null);\n\n  const [selectedPassword, setSelectedPassword] = useState(0);\n  const [revealedPassword, setRevealedPassword] = useState(0);\n\n  const loadData = () => {\n    const data = JSON.parse(localStorage.getItem(user) || '');\n\n    setUserData(data);\n  };\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const addNewPassword = (data: Password) => {\n    if (userData !== null) {\n      const updatedData = {\n        ...userData,\n        savedPasswords: [...userData.savedPasswords, data],\n      };\n\n      localStorage.setItem(user, JSON.stringify(updatedData));\n      loadData();\n    }\n  };\n\n  const deletePassword = (passwordId: number) => {\n    if (userData !== null) {\n      const updatedData = {\n        ...userData,\n        savedPasswords: [...userData.savedPasswords].filter(password => passwordId !== password.id),\n      };\n\n      localStorage.setItem(user, JSON.stringify(updatedData));\n      loadData();\n    }\n  };\n\n  const editPassword = (passwordId: number, updatedPassword: Password) => {\n    if (userData !== null) {\n      const updatedData = {\n        ...userData,\n        savedPasswords: [...userData.savedPasswords].map(password => {\n          if (passwordId === password.id) {\n            return updatedPassword;\n          }\n\n          return password;\n        }),\n      };\n\n      localStorage.setItem(user, JSON.stringify(updatedData));\n      loadData();\n    }\n  };\n\n  return (\n    <div className=\"manager\">\n      <Link to=\"/\">\n        <button className=\"button manager__quite\" type=\"button\">\n          Quit\n        </button>\n      </Link>\n      <NewPassword addNewPassword={addNewPassword} />\n      <div className=\"manager__passwords\">\n        Passwords\n        <ol className=\"manager__list\">\n          {userData?.savedPasswords.map((password: Password) => (\n            <React.Fragment key={password.id}>\n              <li className=\"manager__list-item\">\n                <p>{`App name: ${password.nameOfApp}`}</p>\n                <p>{`Login: ${password.userLogin}`}</p>\n                <p>\n                  {revealedPassword === password.id\n                    ? (`Password: ${password.userPassword}`)\n                    : 'Password: ******'}\n                </p>\n                {password.id === selectedPassword && (\n                  <div className=\"manager__editor\">\n                    <EditPassword\n                      editPassword={editPassword}\n                      password={password}\n                    />\n                  </div>\n                )}\n              </li>\n\n              <button\n                className=\"button manager__button\"\n                type=\"button\"\n                onClick={() => {\n                  if (selectedPassword !== password.id) {\n                    setSelectedPassword(password.id);\n                  } else {\n                    setSelectedPassword(0);\n                  }\n                }}\n              >\n                Edit\n              </button>\n\n              <button\n                className=\"button manager__button\"\n                type=\"button\"\n                onClick={() => {\n                  setRevealedPassword(password.id);\n                }}\n              >\n                Show password\n              </button>\n\n              <button\n                className=\"button manager__button\"\n                type=\"button\"\n                onClick={() => {\n                  deletePassword(password.id);\n                }}\n              >\n                Delete password\n              </button>\n            </React.Fragment>\n          ))}\n        </ol>\n\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Registration.scss';\n\nexport const Registration: React.FC = () => {\n  const navigate = useNavigate();\n  const [userLogin, setUserLogin] = useState('');\n  const [userPassword, setUserPassword] = useState('');\n  const [registered, setRegistered] = useState(false);\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const userData = {\n      userLogin,\n      userPassword,\n      savedPasswords: [],\n    };\n\n    localStorage.setItem(userData.userLogin, JSON.stringify(userData));\n    setRegistered(true);\n  };\n\n  return (\n    <div className=\"reg\">\n      <h2 className=\"reg__title\">Registration</h2>\n\n      <form className=\"form reg__form\" onSubmit={handleSubmit}>\n        <label className=\"form__label\" htmlFor=\"login\">\n          Login\n          <input\n            className=\"form__input\"\n            id=\"login\"\n            type=\"text\"\n            name=\"login\"\n            value={userLogin}\n            onChange={(event) => {\n              setUserLogin(event.target.value);\n            }}\n          />\n        </label>\n\n        <label className=\"form__label\" htmlFor=\"login\">\n          Password\n          <input\n            className=\"form__input\"\n            type=\"password\"\n            name=\"password\"\n            value={userPassword}\n            onChange={(event) => {\n              setUserPassword(event.target.value);\n            }}\n          />\n        </label>\n\n        <button className=\"button\" type=\"submit\">\n          Submit\n        </button>\n\n      </form>\n      {registered && (\n        navigate('/passwordManager', { replace: true, state: { nameFromLocation: userLogin } })\n      )}\n\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { HashRouter, Route, Routes } from 'react-router-dom';\nimport { App } from './App';\nimport { Authorization } from './components/Authorization/Authorization';\nimport { Header } from './components/Header/Header';\nimport { PasswordManager } from './components/PasswordManager/PasswordManager';\nimport { Registration } from './components/Registration/Registration';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Header />\n      <Routes>\n        <Route path=\"/\" element={<App />} />\n        <Route path=\"/authorization\" element={<Authorization />} />\n        <Route path=\"/registration\" element={<Registration />} />\n        <Route path=\"/passwordManager\" element={<PasswordManager />} />\n        <Route path=\"*\" element={<h2>Page not found</h2>} />\n      </Routes>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}