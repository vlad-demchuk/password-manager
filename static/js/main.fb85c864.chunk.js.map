{"version":3,"sources":["App.tsx","components/Authorization/Authorization.tsx","components/Header/Header.tsx","components/EditPassword/EditPassword.tsx","components/NewPassword/NewPassword.tsx","components/PasswordManager/PasswordManager.tsx","components/Registration/Registration.tsx","index.tsx"],"names":["App","className","to","type","Authorization","navigate","useNavigate","useState","userLogin","setUserLogin","userPassword","setUserPassword","wrongData","setWrongData","validAuth","setValidAuth","onSubmit","event","preventDefault","userData","localStorage","getItem","JSON","parse","htmlFor","classNames","id","name","value","onChange","target","replace","state","nameFromLocation","Header","EditPassword","editPassword","password","nameOfApp","setNameOfApp","data","Date","now","NewPassword","addNewPassword","added","setAdded","PasswordManager","useLocation","user","setUser","setUserData","selectedPassword","setSelectedPassword","revealedPassword","setRevealedPassword","loadData","useEffect","passwordId","updatedPassword","updatedData","savedPasswords","map","setItem","stringify","length","Fragment","onClick","filter","deletePassword","Registration","registered","setRegistered","ReactDOM","render","StrictMode","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.fb85c864.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './App.scss';\n\nexport const App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <div className=\"App__buttons\">\n        <Link to=\"/authorization\">\n          <button className=\"button\" type=\"button\">Log in</button>\n        </Link>\n        <Link to=\"/registration\">\n          <button className=\"button\" type=\"button\">Create new account</button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Authorization.scss';\nimport classNames from 'classnames';\n\nexport const Authorization: React.FC = () => {\n  const navigate = useNavigate();\n\n  const [userLogin, setUserLogin] = useState('');\n  const [userPassword, setUserPassword] = useState('');\n  const [wrongData, setWrongData] = useState(false);\n  const [validAuth, setValidAuth] = useState(false);\n\n  const handleSubmit = (event: React.FormEvent): void => {\n    event.preventDefault();\n\n    const userData = localStorage.getItem(userLogin);\n\n    if (userData === null) {\n      setWrongData(true);\n\n      return;\n    }\n\n    const objectData = JSON.parse(userData);\n\n    if (objectData.userPassword !== userPassword) {\n      setWrongData(true);\n\n      return;\n    }\n\n    setValidAuth(true);\n  };\n\n  return (\n    <div className=\"auth\">\n      <h2 className=\"auth__title\">Log In</h2>\n\n      <form className=\"form auth__form\" onSubmit={handleSubmit}>\n        <label className=\"form__label\" htmlFor=\"login\">\n          Login\n          <input\n            className={classNames('form__input', { 'form__input--error': wrongData })}\n            id=\"login\"\n            type=\"text\"\n            name=\"login\"\n            value={userLogin}\n            onChange={(event) => {\n              setUserLogin(event.target.value);\n              setWrongData(false);\n            }}\n          />\n        </label>\n\n        <label className=\"form__label\" htmlFor=\"login\">\n          Password\n          <input\n            className={classNames('form__input', { 'form__input--error': wrongData })}\n            id=\"password\"\n            type=\"password\"\n            name=\"password\"\n            value={userPassword}\n            onChange={(event) => {\n              setUserPassword(event.target.value);\n              setWrongData(false);\n            }}\n          />\n        </label>\n\n        {wrongData && (\n          <p className=\"form__message-error\">Invalid username or password!</p>\n        )}\n\n        <button className=\"button auth__button\" type=\"submit\">\n          Submit\n        </button>\n      </form>\n\n      {validAuth && (\n        navigate('/passwordManager', { replace: true, state: { nameFromLocation: userLogin } })\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport './Header.scss';\n\nexport const Header: React.FC = () => {\n  return (\n    <>\n      <h1 className=\"title\">Password manager</h1>\n    </>\n  );\n};\n","import React, { useState } from 'react';\n\ntype Props = {\n  editPassword: (passwordId: number, updatedPassword: Password) => void\n  password: Password,\n};\n\nexport const EditPassword: React.FC<Props> = ({ editPassword, password }) => {\n  const [nameOfApp, setNameOfApp] = useState(password.nameOfApp);\n  const [userLogin, setUserLogin] = useState(password.userLogin);\n  const [userPassword, setUserPassword] = useState(password.userPassword);\n\n  return (\n    <div className=\"editor\">\n      <form\n        className=\"form form--editor\"\n        onSubmit={(event) => {\n          event.preventDefault();\n\n          const data = {\n            id: Date.now(),\n            nameOfApp,\n            userLogin,\n            userPassword,\n          };\n\n          editPassword(password.id, data);\n        }}\n      >\n        <label className=\"add-form__label\" htmlFor=\"nameOfApp\">\n          <input\n            className=\"form__input\"\n            type=\"text\"\n            name=\"nameOfApp\"\n            value={nameOfApp}\n            onChange={(event) => {\n              setNameOfApp(event.target.value);\n            }}\n          />\n        </label>\n\n        <label className=\"add-form__label\" htmlFor=\"login\">\n          <input\n            className=\"form__input\"\n            type=\"text\"\n            name=\"login\"\n            value={userLogin}\n            onChange={(event) => {\n              setUserLogin(event.target.value);\n            }}\n          />\n        </label>\n\n        <label className=\"add-form__label\" htmlFor=\"login\">\n          <input\n            className=\"form__input\"\n            type=\"password\"\n            name=\"password\"\n            value={userPassword}\n            onChange={(event) => {\n              setUserPassword(event.target.value);\n            }}\n          />\n        </label>\n\n        <button className=\"button\" type=\"submit\">\n          Save\n        </button>\n      </form>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './NewPassword.scss';\n\ntype Props = {\n  addNewPassword: (data: Password) => void,\n};\n\nexport const NewPassword: React.FC<Props> = ({ addNewPassword }) => {\n  const [nameOfApp, setNameOfApp] = useState('');\n  const [userLogin, setUserLogin] = useState('');\n  const [userPassword, setUserPassword] = useState('');\n\n  const [added, setAdded] = useState(false);\n\n  return (\n    <div className=\"newPassword\">\n      <form\n        className=\"form newPassword__form\"\n        onSubmit={(event) => {\n          event.preventDefault();\n\n          const data = {\n            id: Date.now(),\n            nameOfApp,\n            userLogin,\n            userPassword,\n          };\n\n          addNewPassword(data);\n\n          setAdded(true);\n          setNameOfApp('');\n          setUserLogin('');\n          setUserPassword('');\n        }}\n      >\n        <label className=\"form__label\" htmlFor=\"nameOfApp\">\n          Website\n          <input\n            className=\"form__input\"\n            id=\"nameOfApp\"\n            type=\"text\"\n            name=\"nameOfApp\"\n            value={nameOfApp}\n            onChange={(event) => {\n              setNameOfApp(event.target.value);\n              setAdded(false);\n            }}\n          />\n        </label>\n\n        <label className=\"form__label\" htmlFor=\"login\">\n          Login\n          <input\n            className=\"form__input\"\n            type=\"text\"\n            id=\"login\"\n            name=\"login\"\n            value={userLogin}\n            onChange={(event) => {\n              setUserLogin(event.target.value);\n              setAdded(false);\n            }}\n          />\n        </label>\n\n        <label className=\"form__label\" htmlFor=\"password\">\n          Password\n          <input\n            className=\"form__input\"\n            id=\"password\"\n            type=\"password\"\n            name=\"password\"\n            value={userPassword}\n            onChange={(event) => {\n              setUserPassword(event.target.value);\n              setAdded(false);\n            }}\n          />\n        </label>\n\n        {added && (\n          <p className=\"form__message--success\">Password has been added!</p>\n        )}\n\n        <button className=\"button newPassword__button\" type=\"submit\">\n          Add new password\n        </button>\n      </form>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { EditPassword } from '../EditPassword/EditPassword';\nimport { NewPassword } from '../NewPassword/NewPassword';\nimport './PasswordManager.scss';\n\nexport const PasswordManager: React.FC = () => {\n  const location = useLocation();\n  const { nameFromLocation } = location.state as LocationState;\n\n  const [user, setUser] = useState(nameFromLocation);\n  const [userData, setUserData] = useState<User | null>(null);\n\n  const [selectedPassword, setSelectedPassword] = useState(0);\n  const [revealedPassword, setRevealedPassword] = useState(0);\n\n  const loadData = () => {\n    const data = JSON.parse(localStorage.getItem(user) || '');\n\n    setUserData(data);\n  };\n\n  useEffect(() => {\n    setUser(nameFromLocation);\n    loadData();\n  }, []);\n\n  const addNewPassword = (data: Password) => {\n    if (userData !== null) {\n      const updatedData = {\n        ...userData,\n        savedPasswords: [...userData.savedPasswords, data],\n      };\n\n      localStorage.setItem(user, JSON.stringify(updatedData));\n      loadData();\n    }\n  };\n\n  const deletePassword = (passwordId: number) => {\n    if (userData !== null) {\n      const updatedData = {\n        ...userData,\n        savedPasswords: [...userData.savedPasswords].filter(password => passwordId !== password.id),\n      };\n\n      localStorage.setItem(user, JSON.stringify(updatedData));\n      loadData();\n    }\n  };\n\n  const editPassword = (passwordId: number, updatedPassword: Password) => {\n    if (userData !== null) {\n      const updatedData = {\n        ...userData,\n        savedPasswords: [...userData.savedPasswords].map(password => {\n          if (passwordId === password.id) {\n            return updatedPassword;\n          }\n\n          return password;\n        }),\n      };\n\n      localStorage.setItem(user, JSON.stringify(updatedData));\n      loadData();\n    }\n  };\n\n  return (\n    <div className=\"manager\">\n      <Link to=\"/\">\n        <button className=\"button manager__quite\" type=\"button\">\n          Quit\n        </button>\n      </Link>\n\n      <NewPassword addNewPassword={addNewPassword} />\n\n      <div className=\"manager__passwords\">\n        Passwords\n        {!userData?.savedPasswords.length\n          ? (\n            <p>Add passwords using the form above!</p>\n          ) : (\n            <ol className=\"manager__list\">\n              {userData?.savedPasswords.map((password: Password) => (\n                <React.Fragment key={password.id}>\n                  <li className=\"manager__list-item\">\n                    <p>{`Website: ${password.nameOfApp}`}</p>\n                    <p>{`Login: ${password.userLogin}`}</p>\n                    <p>\n                      {revealedPassword === password.id\n                        ? (`Password: ${password.userPassword}`)\n                        : 'Password: ******'}\n                    </p>\n                    {password.id === selectedPassword && (\n                      <div className=\"manager__editor\">\n                        <EditPassword\n                          editPassword={editPassword}\n                          password={password}\n                        />\n                      </div>\n                    )}\n                  </li>\n\n                  <button\n                    className=\"button manager__button\"\n                    type=\"button\"\n                    onClick={() => {\n                      if (selectedPassword !== password.id) {\n                        setSelectedPassword(password.id);\n                      } else {\n                        setSelectedPassword(0);\n                      }\n                    }}\n                  >\n                    Edit\n                  </button>\n\n                  <button\n                    className=\"button manager__button\"\n                    type=\"button\"\n                    onClick={() => {\n                      setRevealedPassword(password.id);\n                    }}\n                  >\n                    Show password\n                  </button>\n\n                  <button\n                    className=\"button manager__button\"\n                    type=\"button\"\n                    onClick={() => {\n                      deletePassword(password.id);\n                    }}\n                  >\n                    Delete password\n                  </button>\n                </React.Fragment>\n              ))}\n            </ol>\n          )}\n\n      </div>\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Registration.scss';\n\nexport const Registration: React.FC = () => {\n  const navigate = useNavigate();\n\n  const [userLogin, setUserLogin] = useState('');\n  const [userPassword, setUserPassword] = useState('');\n  const [wrongData, setWrongData] = useState(false);\n  const [registered, setRegistered] = useState(false);\n\n  const handleSubmit = (event: React.FormEvent): void => {\n    event.preventDefault();\n\n    if (userLogin.length < 6\n      || userPassword.length < 6) {\n      setWrongData(true);\n\n      return;\n    }\n\n    const userData = {\n      userLogin,\n      userPassword,\n      savedPasswords: [],\n    };\n\n    localStorage.setItem(userData.userLogin, JSON.stringify(userData));\n    setRegistered(true);\n  };\n\n  return (\n    <div className=\"reg\">\n      <h2 className=\"reg__title\">Sign Up</h2>\n\n      <form className=\"form reg__form\" onSubmit={handleSubmit}>\n        <label className=\"form__label\" htmlFor=\"login\">\n          Login\n          <input\n            className={classNames('form__input', { 'form__input--error': wrongData })}\n            id=\"login\"\n            type=\"text\"\n            name=\"login\"\n            value={userLogin}\n            onChange={(event) => {\n              setUserLogin(event.target.value);\n            }}\n          />\n        </label>\n\n        <label className=\"form__label\" htmlFor=\"login\">\n          Password\n          <input\n            className={classNames('form__input', { 'form__input--error': wrongData })}\n            type=\"password\"\n            name=\"password\"\n            value={userPassword}\n            onChange={(event) => {\n              setUserPassword(event.target.value);\n            }}\n          />\n        </label>\n\n        {wrongData && (\n          <p className=\"form__message-error\">Login and password lenght must be more than 6!</p>\n        )}\n\n        <button className=\"button reg__button\" type=\"submit\">\n          Submit\n        </button>\n\n      </form>\n\n      {registered && (\n        navigate('/passwordManager', { replace: true, state: { nameFromLocation: userLogin } })\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { HashRouter, Route, Routes } from 'react-router-dom';\nimport { App } from './App';\nimport { Authorization } from './components/Authorization/Authorization';\nimport { Header } from './components/Header/Header';\nimport { PasswordManager } from './components/PasswordManager/PasswordManager';\nimport { Registration } from './components/Registration/Registration';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Header />\n      <Routes>\n        <Route path=\"/\" element={<App />} />\n        <Route path=\"/authorization\" element={<Authorization />} />\n        <Route path=\"/registration\" element={<Registration />} />\n        <Route path=\"/passwordManager\" element={<PasswordManager />} />\n        <Route path=\"*\" element={<h2>Page not found</h2>} />\n      </Routes>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}