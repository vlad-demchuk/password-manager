{"version":3,"sources":["components/Authorization/Authorization.tsx","components/Header/Header.tsx","components/Navigation/Navigation.tsx","components/EditPassword/EditPassword.tsx","components/NewPassword/NewPassword.tsx","components/PasswordManager/PasswordManager.tsx","components/Registration/Registration.tsx","App.tsx","index.tsx"],"names":["Authorization","navigate","useNavigate","useState","userLogin","setUserLogin","userPassword","setUserPassword","wrongData","setWrongData","validAuth","setValidAuth","className","onSubmit","event","preventDefault","userData","localStorage","getItem","JSON","parse","htmlFor","classNames","id","type","name","value","onChange","target","replace","state","nameFromLocation","Header","Navigation","to","EditPassword","editPassword","password","nameOfApp","setNameOfApp","data","Date","now","NewPassword","addNewPassword","added","setAdded","PasswordManager","useLocation","user","setUser","setUserData","selectedPassword","setSelectedPassword","revealedPassword","setRevealedPassword","loadData","useEffect","passwordId","updatedPassword","updatedData","savedPasswords","map","setItem","stringify","length","onClick","filter","deletePassword","Registration","registered","setRegistered","userExist","setUserExist","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oaAKaA,EAA0B,WACrC,IAAMC,EAAWC,cAEjB,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAkCN,oBAAS,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KAwBA,OACE,sBAAKC,UAAU,OAAf,UACE,oBAAIA,UAAU,cAAd,oBAEA,uBAAMA,UAAU,kBAAkBC,SA1BjB,SAACC,GACpBA,EAAMC,iBAEN,IAAMC,EAAWC,aAAaC,QAAQd,GAErB,OAAbY,EAMeG,KAAKC,MAAMJ,GAEfV,eAAiBA,EAMhCK,GAAa,GALXF,GAAa,GARbA,GAAa,IAoBb,UACE,wBAAOG,UAAU,cAAcS,QAAQ,QAAvC,kBAEE,uBACET,UAAWU,IAAW,cAAe,CAAE,qBAAsBd,IAC7De,GAAG,QACHC,KAAK,OACLC,KAAK,QACLC,MAAOtB,EACPuB,SAAU,SAACb,GACTT,EAAaS,EAAMc,OAAOF,OAC1BjB,GAAa,SAKnB,wBAAOG,UAAU,cAAcS,QAAQ,QAAvC,qBAEE,uBACET,UAAWU,IAAW,cAAe,CAAE,qBAAsBd,IAC7De,GAAG,WACHC,KAAK,WACLC,KAAK,WACLC,MAAOpB,EACPqB,SAAU,SAACb,GACTP,EAAgBO,EAAMc,OAAOF,OAC7BjB,GAAa,SAKlBD,GACC,mBAAGI,UAAU,sBAAb,2CAGF,wBAAQA,UAAU,sBAAsBY,KAAK,SAA7C,uBAKDd,GACCT,EAAS,mBAAoB,CAAE4B,SAAS,EAAMC,MAAO,CAAEC,iBAAkB3B,SC7EpE4B,G,MAAmB,WAC9B,OACE,mCACE,oBAAIpB,UAAU,QAAd,kCCFOqB,G,MAAuB,WAClC,OACE,qBAAKrB,UAAU,WAAf,SACE,sBAAKA,UAAU,oBAAf,UACE,cAAC,IAAD,CAAMsB,GAAG,iBAAT,SACE,wBAAQtB,UAAU,SAASY,KAAK,SAAhC,sBAEF,cAAC,IAAD,CAAMU,GAAG,gBAAT,SACE,wBAAQtB,UAAU,SAASY,KAAK,SAAhC,yC,eCLGW,EAAgC,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,SAC5D,EAAkClC,mBAASkC,EAASC,WAApD,mBAAOA,EAAP,KAAkBC,EAAlB,KACA,EAAkCpC,mBAASkC,EAASjC,WAApD,mBAAOA,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,mBAASkC,EAAS/B,cAA1D,mBAAOA,EAAP,KAAqBC,EAArB,KAEA,OACE,qBAAKK,UAAU,SAAf,SACE,uBACEA,UAAU,oBACVC,SAAU,SAACC,GACTA,EAAMC,iBAEN,IAAMyB,EAAO,CACXjB,GAAIkB,KAAKC,MACTJ,YACAlC,YACAE,gBAGF8B,EAAaC,EAASd,GAAIiB,IAZ9B,UAeE,uBAAO5B,UAAU,kBAAkBS,QAAQ,YAA3C,SACE,uBACET,UAAU,cACVY,KAAK,OACLC,KAAK,YACLC,MAAOY,EACPX,SAAU,SAACb,GACTyB,EAAazB,EAAMc,OAAOF,YAKhC,uBAAOd,UAAU,kBAAkBS,QAAQ,QAA3C,SACE,uBACET,UAAU,cACVY,KAAK,OACLC,KAAK,QACLC,MAAOtB,EACPuB,SAAU,SAACb,GACTT,EAAaS,EAAMc,OAAOF,YAKhC,uBAAOd,UAAU,kBAAkBS,QAAQ,QAA3C,SACE,uBACET,UAAU,cACVY,KAAK,WACLC,KAAK,WACLC,MAAOpB,EACPqB,SAAU,SAACb,GACTP,EAAgBO,EAAMc,OAAOF,YAKnC,wBAAQd,UAAU,SAASY,KAAK,SAAhC,wBC1DKmB,G,MAA+B,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eAC7C,EAAkCzC,mBAAS,IAA3C,mBAAOmC,EAAP,KAAkBC,EAAlB,KACA,EAAkCpC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAEA,EAA0BJ,oBAAS,GAAnC,mBAAO0C,EAAP,KAAcC,EAAd,KAEA,OACE,qBAAKlC,UAAU,cAAf,SACE,uBACEA,UAAU,yBACVC,SAAU,SAACC,GACTA,EAAMC,iBAEN,IAAMyB,EAAO,CACXjB,GAAIkB,KAAKC,MACTJ,YACAlC,YACAE,gBAGFsC,EAAeJ,GAEfM,GAAS,GACTP,EAAa,IACblC,EAAa,IACbE,EAAgB,KAjBpB,UAoBE,wBAAOK,UAAU,cAAcS,QAAQ,YAAvC,oBAEE,uBACET,UAAU,cACVW,GAAG,YACHC,KAAK,OACLC,KAAK,YACLC,MAAOY,EACPX,SAAU,SAACb,GACTyB,EAAazB,EAAMc,OAAOF,OAC1BoB,GAAS,SAKf,wBAAOlC,UAAU,cAAcS,QAAQ,QAAvC,kBAEE,uBACET,UAAU,cACVY,KAAK,OACLD,GAAG,QACHE,KAAK,QACLC,MAAOtB,EACPuB,SAAU,SAACb,GACTT,EAAaS,EAAMc,OAAOF,OAC1BoB,GAAS,SAKf,wBAAOlC,UAAU,cAAcS,QAAQ,WAAvC,qBAEE,uBACET,UAAU,cACVW,GAAG,WACHC,KAAK,WACLC,KAAK,WACLC,MAAOpB,EACPqB,SAAU,SAACb,GACTP,EAAgBO,EAAMc,OAAOF,OAC7BoB,GAAS,SAKdD,GACC,mBAAGjC,UAAU,yBAAb,sCAGF,wBAAQA,UAAU,6BAA6BY,KAAK,SAApD,qCC/EKuB,G,MAA4B,WACvC,IACQhB,EADSiB,cACqBlB,MAA9BC,iBAER,EAAwB5B,mBAAS4B,GAAjC,mBAAOkB,EAAP,KAAaC,EAAb,KACA,EAAgC/C,mBAAsB,MAAtD,mBAAOa,EAAP,KAAiBmC,EAAjB,KAEA,EAAgDhD,mBAAS,GAAzD,mBAAOiD,EAAP,KAAyBC,EAAzB,KACA,EAAgDlD,mBAAS,GAAzD,mBAAOmD,EAAP,KAAyBC,EAAzB,KAEMC,EAAW,WACf,IAAMhB,EAAOrB,KAAKC,MAAMH,aAAaC,QAAQ+B,IAAS,IAEtDE,EAAYX,IAGdiB,qBAAU,WACRP,EAAQnB,GACRyB,MACC,IAEH,IAwBMpB,EAAe,SAACsB,EAAoBC,GACxC,GAAiB,OAAb3C,EAAmB,CACrB,IAAM4C,EAAW,2BACZ5C,GADY,IAEf6C,eAAgB,YAAI7C,EAAS6C,gBAAgBC,KAAI,SAAAzB,GAC/C,OAAIqB,IAAerB,EAASd,GACnBoC,EAGFtB,OAIXpB,aAAa8C,QAAQd,EAAM9B,KAAK6C,UAAUJ,IAC1CJ,MAIJ,OACE,sBAAK5C,UAAU,UAAf,UACE,cAAC,IAAD,CAAMsB,GAAG,IAAT,SACE,wBAAQtB,UAAU,wBAAwBY,KAAK,SAA/C,oBAKF,cAAC,EAAD,CAAaoB,eAlDM,SAACJ,GACtB,GAAiB,OAAbxB,EAAmB,CACrB,IAAM4C,EAAW,2BACZ5C,GADY,IAEf6C,eAAe,GAAD,mBAAM7C,EAAS6C,gBAAf,CAA+BrB,MAG/CvB,aAAa8C,QAAQd,EAAM9B,KAAK6C,UAAUJ,IAC1CJ,QA4CA,sBAAK5C,UAAU,qBAAf,uBAEG,OAACI,QAAD,IAACA,OAAD,EAACA,EAAU6C,eAAeI,QAIvB,oBAAIrD,UAAU,gBAAd,gBACGI,QADH,IACGA,OADH,EACGA,EAAU6C,eAAeC,KAAI,SAACzB,GAAD,OAC5B,sBAAKzB,UAAU,sBAAf,UACE,qBAAIA,UAAU,qBAAd,UACE,+CAAgByB,EAASC,aACzB,6CAAcD,EAASjC,aACvB,4BACGkD,IAAqBjB,EAASd,GAA9B,oBACiBc,EAAS/B,cACvB,qBAEL+B,EAASd,KAAO6B,GACf,qBAAKxC,UAAU,kBAAf,SACE,cAAC,EAAD,CACEwB,aAAcA,EACdC,SAAUA,SAMlB,wBACEzB,UAAU,yBACVY,KAAK,SACL0C,QAAS,WACHd,IAAqBf,EAASd,GAChC8B,EAAoBhB,EAASd,IAE7B8B,EAAoB,IAP1B,kBAcA,wBACEzC,UAAU,yBACVY,KAAK,SACL0C,QAAS,WACPX,EAAoBlB,EAASd,KAJjC,2BAUA,wBACEX,UAAU,yBACVY,KAAK,SACL0C,QAAS,YA9FJ,SAACR,GACtB,GAAiB,OAAb1C,EAAmB,CACrB,IAAM4C,EAAW,2BACZ5C,GADY,IAEf6C,eAAgB,YAAI7C,EAAS6C,gBAAgBM,QAAO,SAAA9B,GAAQ,OAAIqB,IAAerB,EAASd,QAG1FN,aAAa8C,QAAQd,EAAM9B,KAAK6C,UAAUJ,IAC1CJ,KAuFgBY,CAAe/B,EAASd,KAJ5B,+BA3CwCc,EAASd,SAJvD,4EC9EC8C,G,MAAyB,WACpC,IAAMpE,EAAWC,cAEjB,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOmE,EAAP,KAAmBC,EAAnB,KACA,EAAkCpE,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAkCN,oBAAS,GAA3C,mBAAOqE,EAAP,KAAkBC,EAAlB,KA8BA,OACE,sBAAK7D,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,qBAEA,uBAAMA,UAAU,iBAAiBC,SAhChB,SAACC,GAGpB,GAFAA,EAAMC,iBAEFX,EAAU6D,OAAS,GAClB3D,EAAa2D,OAAS,EACzBxD,GAAa,QAOf,GAAkB,OAFAQ,aAAaC,QAAQd,GAEvC,CAMA,IAAMY,EAAW,CACfZ,YACAE,eACAuD,eAAgB,IAGlB5C,aAAa8C,QAAQ/C,EAASZ,UAAWe,KAAK6C,UAAUhD,IACxDuD,GAAc,QAZZE,GAAa,IAmBb,UACE,wBAAO7D,UAAU,cAAcS,QAAQ,QAAvC,kBAEE,uBACET,UAAWU,IAAW,cAAe,CAAE,qBAAsBd,IAC7De,GAAG,QACHC,KAAK,OACLC,KAAK,QACLC,MAAOtB,EACPuB,SAAU,SAACb,GACTT,EAAaS,EAAMc,OAAOF,OAC1BjB,GAAa,GACbgE,GAAa,SAKnB,wBAAO7D,UAAU,cAAcS,QAAQ,QAAvC,qBAEE,uBACET,UAAWU,IAAW,cAAe,CAAE,qBAAsBd,IAC7DgB,KAAK,WACLC,KAAK,WACLC,MAAOpB,EACPqB,SAAU,SAACb,GACTP,EAAgBO,EAAMc,OAAOF,OAC7BjB,GAAa,GACbgE,GAAa,SAKlBD,GACC,mBAAG5D,UAAU,sBAAb,iDAGDJ,GACC,mBAAGI,UAAU,sBAAb,4DAGF,wBAAQA,UAAU,qBAAqBY,KAAK,SAA5C,uBAMD8C,GACCrE,EAAS,mBAAoB,CAAE4B,SAAS,EAAMC,MAAO,CAAEC,iBAAkB3B,UCpFpEsE,EAAgB,WAC3B,OACE,sBAAK9D,UAAU,MAAf,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO+D,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,iBAAiBC,QAAS,cAAC,EAAD,MACtC,cAAC,IAAD,CAAOD,KAAK,gBAAgBC,QAAS,cAAC,EAAD,MACrC,cAAC,IAAD,CAAOD,KAAK,mBAAmBC,QAAS,cAAC,EAAD,MACxC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,yDCZjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.fcae0104.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Authorization.scss';\nimport classNames from 'classnames';\n\nexport const Authorization: React.FC = () => {\n  const navigate = useNavigate();\n\n  const [userLogin, setUserLogin] = useState('');\n  const [userPassword, setUserPassword] = useState('');\n  const [wrongData, setWrongData] = useState(false);\n  const [validAuth, setValidAuth] = useState(false);\n\n  const handleSubmit = (event: React.FormEvent): void => {\n    event.preventDefault();\n\n    const userData = localStorage.getItem(userLogin);\n\n    if (userData === null) {\n      setWrongData(true);\n\n      return;\n    }\n\n    const objectData = JSON.parse(userData);\n\n    if (objectData.userPassword !== userPassword) {\n      setWrongData(true);\n\n      return;\n    }\n\n    setValidAuth(true);\n  };\n\n  return (\n    <div className=\"auth\">\n      <h2 className=\"auth__title\">Log In</h2>\n\n      <form className=\"form auth__form\" onSubmit={handleSubmit}>\n        <label className=\"form__label\" htmlFor=\"login\">\n          Login\n          <input\n            className={classNames('form__input', { 'form__input--error': wrongData })}\n            id=\"login\"\n            type=\"text\"\n            name=\"login\"\n            value={userLogin}\n            onChange={(event) => {\n              setUserLogin(event.target.value);\n              setWrongData(false);\n            }}\n          />\n        </label>\n\n        <label className=\"form__label\" htmlFor=\"login\">\n          Password\n          <input\n            className={classNames('form__input', { 'form__input--error': wrongData })}\n            id=\"password\"\n            type=\"password\"\n            name=\"password\"\n            value={userPassword}\n            onChange={(event) => {\n              setUserPassword(event.target.value);\n              setWrongData(false);\n            }}\n          />\n        </label>\n\n        {wrongData && (\n          <p className=\"form__message-error\">Invalid username or password!</p>\n        )}\n\n        <button className=\"button auth__button\" type=\"submit\">\n          Submit\n        </button>\n      </form>\n\n      {validAuth && (\n        navigate('/passwordManager', { replace: true, state: { nameFromLocation: userLogin } })\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport './Header.scss';\n\nexport const Header: React.FC = () => {\n  return (\n    <>\n      <h1 className=\"title\">Password manager</h1>\n    </>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Navigation.scss';\n\nexport const Navigation: React.FC = () => {\n  return (\n    <div className=\"navigate\">\n      <div className=\"navigate__buttons\">\n        <Link to=\"/authorization\">\n          <button className=\"button\" type=\"button\">Log in</button>\n        </Link>\n        <Link to=\"/registration\">\n          <button className=\"button\" type=\"button\">Create new account</button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\n\ntype Props = {\n  editPassword: (passwordId: number, updatedPassword: Password) => void\n  password: Password,\n};\n\nexport const EditPassword: React.FC<Props> = ({ editPassword, password }) => {\n  const [nameOfApp, setNameOfApp] = useState(password.nameOfApp);\n  const [userLogin, setUserLogin] = useState(password.userLogin);\n  const [userPassword, setUserPassword] = useState(password.userPassword);\n\n  return (\n    <div className=\"editor\">\n      <form\n        className=\"form form--editor\"\n        onSubmit={(event) => {\n          event.preventDefault();\n\n          const data = {\n            id: Date.now(),\n            nameOfApp,\n            userLogin,\n            userPassword,\n          };\n\n          editPassword(password.id, data);\n        }}\n      >\n        <label className=\"add-form__label\" htmlFor=\"nameOfApp\">\n          <input\n            className=\"form__input\"\n            type=\"text\"\n            name=\"nameOfApp\"\n            value={nameOfApp}\n            onChange={(event) => {\n              setNameOfApp(event.target.value);\n            }}\n          />\n        </label>\n\n        <label className=\"add-form__label\" htmlFor=\"login\">\n          <input\n            className=\"form__input\"\n            type=\"text\"\n            name=\"login\"\n            value={userLogin}\n            onChange={(event) => {\n              setUserLogin(event.target.value);\n            }}\n          />\n        </label>\n\n        <label className=\"add-form__label\" htmlFor=\"login\">\n          <input\n            className=\"form__input\"\n            type=\"password\"\n            name=\"password\"\n            value={userPassword}\n            onChange={(event) => {\n              setUserPassword(event.target.value);\n            }}\n          />\n        </label>\n\n        <button className=\"button\" type=\"submit\">\n          Save\n        </button>\n      </form>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './NewPassword.scss';\n\ntype Props = {\n  addNewPassword: (data: Password) => void,\n};\n\nexport const NewPassword: React.FC<Props> = ({ addNewPassword }) => {\n  const [nameOfApp, setNameOfApp] = useState('');\n  const [userLogin, setUserLogin] = useState('');\n  const [userPassword, setUserPassword] = useState('');\n\n  const [added, setAdded] = useState(false);\n\n  return (\n    <div className=\"newPassword\">\n      <form\n        className=\"form newPassword__form\"\n        onSubmit={(event) => {\n          event.preventDefault();\n\n          const data = {\n            id: Date.now(),\n            nameOfApp,\n            userLogin,\n            userPassword,\n          };\n\n          addNewPassword(data);\n\n          setAdded(true);\n          setNameOfApp('');\n          setUserLogin('');\n          setUserPassword('');\n        }}\n      >\n        <label className=\"form__label\" htmlFor=\"nameOfApp\">\n          Website\n          <input\n            className=\"form__input\"\n            id=\"nameOfApp\"\n            type=\"text\"\n            name=\"nameOfApp\"\n            value={nameOfApp}\n            onChange={(event) => {\n              setNameOfApp(event.target.value);\n              setAdded(false);\n            }}\n          />\n        </label>\n\n        <label className=\"form__label\" htmlFor=\"login\">\n          Login\n          <input\n            className=\"form__input\"\n            type=\"text\"\n            id=\"login\"\n            name=\"login\"\n            value={userLogin}\n            onChange={(event) => {\n              setUserLogin(event.target.value);\n              setAdded(false);\n            }}\n          />\n        </label>\n\n        <label className=\"form__label\" htmlFor=\"password\">\n          Password\n          <input\n            className=\"form__input\"\n            id=\"password\"\n            type=\"password\"\n            name=\"password\"\n            value={userPassword}\n            onChange={(event) => {\n              setUserPassword(event.target.value);\n              setAdded(false);\n            }}\n          />\n        </label>\n\n        {added && (\n          <p className=\"form__message--success\">Password has been added!</p>\n        )}\n\n        <button className=\"button newPassword__button\" type=\"submit\">\n          Add new password\n        </button>\n      </form>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { EditPassword } from '../EditPassword/EditPassword';\nimport { NewPassword } from '../NewPassword/NewPassword';\nimport './PasswordManager.scss';\n\nexport const PasswordManager: React.FC = () => {\n  const location = useLocation();\n  const { nameFromLocation } = location.state as LocationState;\n\n  const [user, setUser] = useState(nameFromLocation);\n  const [userData, setUserData] = useState<User | null>(null);\n\n  const [selectedPassword, setSelectedPassword] = useState(0);\n  const [revealedPassword, setRevealedPassword] = useState(0);\n\n  const loadData = () => {\n    const data = JSON.parse(localStorage.getItem(user) || '');\n\n    setUserData(data);\n  };\n\n  useEffect(() => {\n    setUser(nameFromLocation);\n    loadData();\n  }, []);\n\n  const addNewPassword = (data: Password) => {\n    if (userData !== null) {\n      const updatedData = {\n        ...userData,\n        savedPasswords: [...userData.savedPasswords, data],\n      };\n\n      localStorage.setItem(user, JSON.stringify(updatedData));\n      loadData();\n    }\n  };\n\n  const deletePassword = (passwordId: number) => {\n    if (userData !== null) {\n      const updatedData = {\n        ...userData,\n        savedPasswords: [...userData.savedPasswords].filter(password => passwordId !== password.id),\n      };\n\n      localStorage.setItem(user, JSON.stringify(updatedData));\n      loadData();\n    }\n  };\n\n  const editPassword = (passwordId: number, updatedPassword: Password) => {\n    if (userData !== null) {\n      const updatedData = {\n        ...userData,\n        savedPasswords: [...userData.savedPasswords].map(password => {\n          if (passwordId === password.id) {\n            return updatedPassword;\n          }\n\n          return password;\n        }),\n      };\n\n      localStorage.setItem(user, JSON.stringify(updatedData));\n      loadData();\n    }\n  };\n\n  return (\n    <div className=\"manager\">\n      <Link to=\"/\">\n        <button className=\"button manager__quite\" type=\"button\">\n          Quit\n        </button>\n      </Link>\n\n      <NewPassword addNewPassword={addNewPassword} />\n\n      <div className=\"manager__passwords\">\n        Passwords\n        {!userData?.savedPasswords.length\n          ? (\n            <p>Add passwords using the form above!</p>\n          ) : (\n            <ol className=\"manager__list\">\n              {userData?.savedPasswords.map((password: Password) => (\n                <div className=\"manager__list-block\" key={password.id}>\n                  <li className=\"manager__list-item\">\n                    <p>{`Website: ${password.nameOfApp}`}</p>\n                    <p>{`Login: ${password.userLogin}`}</p>\n                    <p>\n                      {revealedPassword === password.id\n                        ? (`Password: ${password.userPassword}`)\n                        : 'Password: ******'}\n                    </p>\n                    {password.id === selectedPassword && (\n                      <div className=\"manager__editor\">\n                        <EditPassword\n                          editPassword={editPassword}\n                          password={password}\n                        />\n                      </div>\n                    )}\n                  </li>\n\n                  <button\n                    className=\"button manager__button\"\n                    type=\"button\"\n                    onClick={() => {\n                      if (selectedPassword !== password.id) {\n                        setSelectedPassword(password.id);\n                      } else {\n                        setSelectedPassword(0);\n                      }\n                    }}\n                  >\n                    Edit\n                  </button>\n\n                  <button\n                    className=\"button manager__button\"\n                    type=\"button\"\n                    onClick={() => {\n                      setRevealedPassword(password.id);\n                    }}\n                  >\n                    Show password\n                  </button>\n\n                  <button\n                    className=\"button manager__button\"\n                    type=\"button\"\n                    onClick={() => {\n                      deletePassword(password.id);\n                    }}\n                  >\n                    Delete password\n                  </button>\n                </div>\n              ))}\n            </ol>\n          )}\n\n      </div>\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Registration.scss';\n\nexport const Registration: React.FC = () => {\n  const navigate = useNavigate();\n\n  const [userLogin, setUserLogin] = useState('');\n  const [userPassword, setUserPassword] = useState('');\n  const [registered, setRegistered] = useState(false);\n  const [wrongData, setWrongData] = useState(false);\n  const [userExist, setUserExist] = useState(false);\n\n  const handleSubmit = (event: React.FormEvent): void => {\n    event.preventDefault();\n\n    if (userLogin.length < 6\n      || userPassword.length < 6) {\n      setWrongData(true);\n\n      return;\n    }\n\n    const checkUser = localStorage.getItem(userLogin);\n\n    if (checkUser !== null) {\n      setUserExist(true);\n\n      return;\n    }\n\n    const userData = {\n      userLogin,\n      userPassword,\n      savedPasswords: [],\n    };\n\n    localStorage.setItem(userData.userLogin, JSON.stringify(userData));\n    setRegistered(true);\n  };\n\n  return (\n    <div className=\"reg\">\n      <h2 className=\"reg__title\">Sign Up</h2>\n\n      <form className=\"form reg__form\" onSubmit={handleSubmit}>\n        <label className=\"form__label\" htmlFor=\"login\">\n          Login\n          <input\n            className={classNames('form__input', { 'form__input--error': wrongData })}\n            id=\"login\"\n            type=\"text\"\n            name=\"login\"\n            value={userLogin}\n            onChange={(event) => {\n              setUserLogin(event.target.value);\n              setWrongData(false);\n              setUserExist(false);\n            }}\n          />\n        </label>\n\n        <label className=\"form__label\" htmlFor=\"login\">\n          Password\n          <input\n            className={classNames('form__input', { 'form__input--error': wrongData })}\n            type=\"password\"\n            name=\"password\"\n            value={userPassword}\n            onChange={(event) => {\n              setUserPassword(event.target.value);\n              setWrongData(false);\n              setUserExist(false);\n            }}\n          />\n        </label>\n\n        {userExist && (\n          <p className=\"form__message-error\">User with that name already exists!</p>\n        )}\n\n        {wrongData && (\n          <p className=\"form__message-error\">Login and password lenght must be more than 6!</p>\n        )}\n\n        <button className=\"button reg__button\" type=\"submit\">\n          Submit\n        </button>\n\n      </form>\n\n      {registered && (\n        navigate('/passwordManager', { replace: true, state: { nameFromLocation: userLogin } })\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { Authorization } from './components/Authorization/Authorization';\nimport { Header } from './components/Header/Header';\nimport { Navigation } from './components/Navigation';\nimport { PasswordManager } from './components/PasswordManager/PasswordManager';\nimport { Registration } from './components/Registration/Registration';\n\nexport const App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Routes>\n        <Route path=\"/\" element={<Navigation />} />\n        <Route path=\"/authorization\" element={<Authorization />} />\n        <Route path=\"/registration\" element={<Registration />} />\n        <Route path=\"/passwordManager\" element={<PasswordManager />} />\n        <Route path=\"*\" element={<h2>Page not found</h2>} />\n      </Routes>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}